plugins {
    // Provide convenience executables for trying out the examples.
    id 'application'
    // ASSUMES GRADLE 2.12 OR HIGHER. Use plugin version 0.7.5 with earlier gradle versions
//    id 'com.google.protobuf' version '0.8.8'
    id 'com.google.protobuf' version '0.9.1'

    // Generate IntelliJ IDEA's .idea & .iml project files
    id 'idea'
}

repositories {
    maven { // The google mirror is less flaky than mavenCentral()
        url "https://maven-central.storage-download.googleapis.com/repos/central/data/" }
    mavenLocal()
    mavenCentral()
}


// IMPORTANT: You probably want the non-SNAPSHOT version of gRPC. Make sure you
// are looking at a tagged version of the example and not "master"!

// Feel free to delete the comment at the next line. It is just for safely
// updating the version in our release process.
def grpcVersion = '1.43.2' // CURRENT_GRPC_VERSION
def protobufVersion = '3.19.3'
def protocVersion = protobufVersion

dependencies {
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"

    implementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '3.0.1'
    implementation group: 'org.eclipse.persistence', name: 'org.eclipse.persistence.moxy', version: '3.0.2'

//    implementation group: 'org.simpleframework', name: 'simple-xml', version: '2.7.1'


    // https://mvnrepository.com/artifact/org.apache.commons/commons-text
    compile group: 'org.apache.commons', name: 'commons-text', version: '1.9'



    compileOnly 'javax.annotation:javax.annotation-api:1.3.2'

    // examples/advanced need this for JsonFormat
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"

    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"

    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:4.2.0'
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        proto {
            // In addition to the default 'src/main/proto'
            srcDir '../../protos'
        }
        java {
            srcDirs = ['src/main/java']
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}
jar {
    manifest {
        attributes(
                'Main-Class':'com.example.TransaqGrpcClientExample'
        )
    }
}
mainClassName = 'com.example.TransaqGrpcClientExample'
startScripts.enabled = true